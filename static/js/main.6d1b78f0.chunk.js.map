{"version":3,"sources":["components/Form.jsx","components/ToDo.jsx","components/ToDoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","setStatus","setInputText","setToDos","toDos","inputText","Grid","container","direction","justify","alignItems","item","Paper","TextField","value","onChange","e","target","type","className","id","label","variant","Button","color","onClick","preventDefault","input","completed","Math","random","name","ToDo","text","todo","map","filter","ToDoList","filteredToDos","App","useState","status","setFilteredToDos","useEffect","getLocalToDos","localStorage","getItem","setItem","JSON","stringify","toDoLocal","parse","filterHandler","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d1b78f0.chunk.js","sourcesContent":["import React from 'react';\nimport { BsPlus } from 'react-icons/bs';\nimport {Button,TextField,Grid,Paper} from '@material-ui/core';\n\nimport '../App.css';\n\nconst Form = ({setStatus,setInputText,setToDos,toDos,inputText}) => {\n    const inputTextHandler=(e)=>{\n        setInputText(e.target.value);\n        }\n    const submitToDoHandler=(e)=>{\n        e.preventDefault();\n        setToDos([\n            ...toDos,{input:inputText,completed:false,id:Math.random()*1000}\n        ]);\n        setInputText(\"\");\n        //clear inputText state to ad next to do\n    }\n    const statusHandler=(e)=>{\n        setStatus(e.target.value);\n    }\n    return(\n        <form >\n            <Grid  container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            >\n                <Grid item>\n                <Paper>\n                <TextField value={inputText} //clear textbox to be ready to the next to do\n                    onChange={inputTextHandler} \n                    type=\"text\" \n                    className=\"todo-input\" \n                    id=\"standard-basic\" \n                    label=\"My new task\" \n                    variant=\"standard\" />\n\n                <Button variant=\"contained\" color=\"secondary\" className=\"todo-button\" type=\"submit\" onClick={submitToDoHandler}>\n                    <BsPlus/>\n                    </Button>\n                </Paper>\n                </Grid>\n\n                <Grid item>\n                <Paper>\n                <div className=\"select\">\n                        <select onChange={statusHandler} name=\"todo\" className=\"filter-todo\">\n                            <option value=\"ALL\">All</option>\n                            <option value=\"COMPLETED\">completed</option>\n                            <option value=\"UNCOMPLETED\">uncompleted</option>\n                        </select>\n                    </div>\n                </Paper>\n                </Grid>\n\n            </Grid>\n\n\n\n           \n\n        </form>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport {BsFillTrashFill,BsCheckCircle} from 'react-icons/bs';\nimport {Button} from '@material-ui/core';\n\n\nconst ToDo =({text,todo,setToDos,toDos})=>{\n    const deleteHandler=()=>{\n        setToDos(toDos.filter(item=>item.id!==todo.id));\n    }\n\n    const completeHandler=()=>{\n        setToDos(toDos.map(item => {\n             if(item.id === todo.id){\n                 return{\n                     ...item, completed: !item.completed\n                 }\n             }\n             return item;\n         }\n         ));\n    }\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ?\"completed\":\"\"}`}>{text}</li>\n            <Button onClick={completeHandler} className=\"check-btn\"><BsCheckCircle/></Button>\n            <Button onClick={deleteHandler} className=\"trash-btn\"><BsFillTrashFill/></Button>\n        </div>\n        );\n    }\n    \n    export default ToDo;","import React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({filteredToDos,toDos,setToDos}) =>{\n    return(\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\"></ul>\n            {filteredToDos.map(todo=> \n                <ToDo \n                setToDos={setToDos} \n                toDos={toDos}\n                todo={todo}\n                //pass a refrence to itself\n                key={todo.id} \n                text={todo.input}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;","import React ,{ useState,useEffect } from \"react\";\nimport './App.css';\nimport {Grid,Paper} from '@material-ui/core';\nimport {AiOutlineSwapLeft,AiOutlineSwapRight,AiOutlineMenu} from 'react-icons/ai';\n\n\n\n//importing components\nimport Form from \"./components/Form\";\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  const [inputText,setInputText]=useState('');\n  const [toDos,setToDos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredToDos, setFilteredToDos]=useState([]);\n\n  //Run Once when the app start\n  useEffect(()=>\n  getLocalToDos()\n  ,[]);\n  const filterHandler=()=>{\n    switch(status){\n    case \"COMPLETED\":\nsetFilteredToDos(toDos.filter(item=>item.completed===true));\nbreak;\ncase \"UNCOMPLETED\":\nsetFilteredToDos(toDos.filter(item=>item.completed===false));\nbreak;\ndefault:\n  setFilteredToDos(toDos);\n  break;\n  }\n  }\n\n  const saveLocalToDos=()=>{\n  localStorage.setItem(\"toDos\",JSON.stringify(toDos));\n  }\n\n  const getLocalToDos=()=>{\n    if(localStorage.getItem(\"toDos\")===null){\n      localStorage.setItem(\"toDos\",JSON.stringify([]));\n      }\n      else{\n       let toDoLocal=JSON.parse(localStorage.getItem(\"toDos\"));\n       setToDos(toDoLocal);\n      }\n  }\n\n  useEffect(()=>{\n    filterHandler();\n    saveLocalToDos()}\n    ,[status,toDos]);\n\n  return (\n      <Grid container >\n        <Grid item xs={12}>\n          <Paper>\n          <header>\n          <h1>My List</h1>\n          </header>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper  >\n          <Form setStatus={setStatus} setInputText={setInputText} setToDos={setToDos} toDos={toDos} inputText={inputText}/>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className=\"list-icon-section\">\n          <Paper>\n         <AiOutlineSwapLeft/>\n         <AiOutlineMenu/>\n\n         <AiOutlineSwapRight/>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <Paper>\n          <ToDoList filteredToDos={filteredToDos} setToDos={setToDos} toDos={toDos}/>\n          </Paper>\n        </Grid>\n\n      </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}