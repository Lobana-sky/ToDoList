{"version":3,"sources":["components/Form.jsx","components/ToDo.jsx","components/ToDoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","setStatus","setInputText","setToDos","toDos","inputText","value","onChange","e","target","type","className","onClick","preventDefault","input","completed","id","Math","random","name","ToDo","text","todo","map","item","filter","ToDoList","filteredToDos","App","useState","status","setFilteredToDos","useEffect","getLocalToDos","localStorage","getItem","setItem","JSON","stringify","toDoLocal","parse","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e56f324f.chunk.js","sourcesContent":["import React from 'react';\nimport { BsPlus } from 'react-icons/bs';\nimport '../App.css';\n\n\n\nconst Form = ({setStatus,setInputText,setToDos,toDos,inputText}) => {\n    const inputTextHandler=(e)=>{\n        setInputText(e.target.value);\n        }\n    const submitToDoHandler=(e)=>{\n        e.preventDefault();\n        setToDos([\n            ...toDos,{input:inputText,completed:false,id:Math.random()*1000}\n        ]);\n        setInputText(\"\");\n        //clear inputText state to ad next to do\n    }\n    const statusHandler=(e)=>{\n        setStatus(e.target.value);\n    }\n    return(\n        <form>\n            <input \n            value={inputText} //clear textbox to be ready to the next to do\n            onChange={inputTextHandler} \n            type=\"text\" \n            className=\"todo-input\"/>\n            <button className=\"todo-button\" type=\"submit\" onClick={submitToDoHandler}>\n            <i className=\"fab fa-facebook\"></i>\n            <BsPlus/>\n            </button>\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todo\" className=\"filter-todo\">\n                    <option value=\"ALL\">All</option>\n                    <option value=\"COMPLETED\">completed</option>\n                    <option value=\"UNCOMPLETED\">uncompleted</option>\n                </select>\n            </div>\n        </form>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport {BsFillTrashFill,BsCheckCircle} from 'react-icons/bs';\n\nconst ToDo =({text,todo,setToDos,toDos})=>{\n    const deleteHandler=()=>{\n        setToDos(toDos.filter(item=>item.id!==todo.id));\n    }\n\n    const completeHandler=()=>{\n        setToDos(toDos.map(item => {\n             if(item.id === todo.id){\n                 return{\n                     ...item, completed: !item.completed\n                 }\n             }\n             return item;\n         }\n         ));\n    }\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ?\"completed\":\"\"}`}>{text}</li>\n            <button onClick={completeHandler} className=\"check-btn\"><BsCheckCircle/></button>\n            <button onClick={deleteHandler} className=\"trash-btn\"><BsFillTrashFill/></button>\n        </div>\n        );\n    }\n    \n    export default ToDo;","import React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({filteredToDos,toDos,setToDos}) =>{\n    return(\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\"></ul>\n            {filteredToDos.map(todo=> \n                <ToDo \n                setToDos={setToDos} \n                toDos={toDos}\n                todo={todo}\n                //pass a refrence to itself\n                key={todo.id} \n                text={todo.input}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;","import React ,{ useState,useEffect } from \"react\";\nimport './App.css';\n\n// import {Container,Row} from 'react-bootstrap'\n//importing components\nimport Form from \"./components/Form\";\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  const [inputText,setInputText]=useState('');\n  const [toDos,setToDos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredToDos, setFilteredToDos]=useState([]);\n\n  //Run Once when the app start\n  useEffect(()=>\n  getLocalToDos()\n  ,[]);\n  const filterHandler=()=>{\n    switch(status){\n    case \"COMPLETED\":\nsetFilteredToDos(toDos.filter(item=>item.completed===true));\nbreak;\ncase \"UNCOMPLETED\":\nsetFilteredToDos(toDos.filter(item=>item.completed===false));\nbreak;\ndefault:\n  setFilteredToDos(toDos);\n  break;\n  }\n  }\n\n  const saveLocalToDos=()=>{\n  localStorage.setItem(\"toDos\",JSON.stringify(toDos));\n  }\n\n  const getLocalToDos=()=>{\n    if(localStorage.getItem(\"toDos\")===null){\n      localStorage.setItem(\"toDos\",JSON.stringify([]));\n      }\n      else{\n       let toDoLocal=JSON.parse(localStorage.getItem(\"toDos\"));\n       setToDos(toDoLocal);\n      }\n  }\n\n  useEffect(()=>{\n    filterHandler();\n    saveLocalToDos()}\n    ,[status,toDos]);\n\n  return (\n    <div className=\"App\">\n        <header>\n          <h1>My List</h1>\n        </header>\n        <Form setStatus={setStatus} setInputText={setInputText} setToDos={setToDos} toDos={toDos} inputText={inputText}/>\n        <ToDoList filteredToDos={filteredToDos} setToDos={setToDos} toDos={toDos}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}